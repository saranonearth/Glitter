{"version":3,"sources":["Store/Store.ts","feed/components/Tabs.tsx","feed/components/GlitInput.tsx","feed/components/GlitButton.tsx","feed/components/FeedCard.tsx","feed/components/ProfileChip.tsx","config.ts","services/UnicornService.ts","discover/hooks/useFollow.ts","discover/hooks/useUserSearch.ts","discover/components/SearchComponent.tsx","discover/index.tsx","feed/hooks/usePostGlit.ts","feed/components/FeedHolder.tsx","feed/hooks/useFetchGlits.ts","feed/index.tsx","auth/hooks/useGetUser.ts","auth/hooks/useLogin.ts","auth/Signin.tsx","auth/hooks/useCreateUser.ts","auth/Signup.tsx","components/Home.tsx","components/Loader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStore","create","set","isAuth","user","token","isBusy","glits","setUser","setIsAuth","value","state","setToken","removeUser","removeToken","setBusy","setLogout","setGlits","Tabs","handleTabChange","selectedTab","React","useMemo","className","onClick","TABS","FEED","DISCOVER","GlitInput","changeHandler","onChange","e","style","width","height","resize","padding","outline","placeholder","maxLength","GlitButton","handlePostGlit","backgroundColor","color","fontWeight","xmlns","viewBox","fill","d","FeedCard","data","tweetText","_","get","author","authorImage","postedAt","formatDistance","Date","includeSeconds","addSuffix","length","src","alt","ProfileChip","logout","avatar","bottom","backgroundImage","backgroundSize","top","fontSize","UNICORN_SERVICE","process","BASE_URL","UnicornService","baseURL","_instance","_handleResponse","response","_handleError","error","console","log","Promise","reject","this","axios","headers","timeout","_initializeRequestInterceptor","_initializeResponseInterceptor","interceptors","request","use","config","localStorage","getItem","useFollow","id","a","post","status","toast","dark","newUser","followers","errors","map","msg","useSearchUser","useState","loading","setLoading","setData","username","SearchComponent","props","param","setParam","searchUser","handleDataSetting","follow","delayedQuery","useCallback","debounce","useEffect","cancel","renderStrip","find","_id","toString","handleFollowRequest","Math","random","target","type","index","usePostGlit","body","JSON","stringify","newGlits","FeedHolder","tab","setTab","glit","setGlit","postGlit","useFetchGlits","Index","history","useHistory","getFeed","push","removeItem","useGetUser","localUser","setLocalUser","useLogin","getUser","credentials","setItem","Signin","initiateLogin","password","handleChange","name","onSubmit","preventDefault","autoComplete","required","to","useCreateUser","Signup","initiateSignUp","email","Home","marginLeft","marginTop","AppLoader","App","socketIOClient","on","tweetUserId","postedBy","newestOnTop","autoClose","exact","path","component","Feed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd268b75.chunk.js","sourcesContent":["import { Tweet, User } from '../types';\nimport create from 'zustand'\n\n\ntype AuthStore = {\n    isAuth: boolean;\n    user: User | any;\n    token: string;\n    isBusy: boolean;\n    glits: Array<Tweet> | null,\n    setUser: (user: any) => void;\n    setIsAuth: (value: boolean) => void;\n    setToken: (token: string) => void;\n    setBusy: (value: boolean) => void;\n    setLogout: () => void\n    setGlits: (value: Tweet[] | null) => void;\n};\n\nconst useStore = create<AuthStore>(set => ({\n    isAuth: false,\n    user: null,\n    token: \"\",\n    isBusy: false,\n    glits: null,\n    setUser: (user) => set(() => ({ user })),\n    setIsAuth: (value) => set(state => ({ isAuth: value })),\n    setToken: (token) => set(() => ({ token })),\n    removeUser: () => set(() => ({ user: null })),\n    removeToken: () => set(() => ({ token: \"\" })),\n    setBusy: (value) => set(() => ({ isBusy: value })),\n    setLogout: () => set(() => ({ isAuth: false, user: null })),\n    setGlits: (glits) => set(() => ({ glits: glits }))\n}))\n\nexport default useStore;\n","import React from 'react'\n\nimport { TABS } from './FeedHolder'\n\ninterface Props {\n    handleTabChange: (tab: string)=> void;\n    selectedTab: string\n}\n\nconst Tabs = ({handleTabChange, selectedTab}: Props) => {\n    return React.useMemo(()=>(\n        <div className=\"bg-white\">\n        <div className=\"flex-col-h\">\n        <div className=\"tab-holder\">\n        <div onClick={()=> handleTabChange(TABS.FEED)}  className={selectedTab===TABS.FEED? \"tab tab-selected\":\"tab\"}>\n            Feed\n        </div>\n        </div>\n        <div className=\"tab-holder\">\n            <div onClick={()=> handleTabChange(TABS.DISCOVER)}  className={selectedTab===TABS.DISCOVER? \"tab tab-selected\":\"tab\"}>\n            Discover\n        </div>\n        </div>\n    </div>\n    </div>\n    ),[selectedTab])\n}\n\nexport default Tabs\n","import React from 'react'\n\n\ninterface Props {\n    changeHandler: (e: any) => void;\n    value: string\n}\nconst GlitInput = ({value,changeHandler}:Props) => {\n    \n    return React.useMemo(()=>(\n        <div className=\"mt-10 w-full\">\n            <textarea value={value} onChange={(e)=>{\n            \n                changeHandler(e)\n            }} className=\"rounded-lg shadow-lg text-gray-500 text-lg\" style={{width:'100%', height: '100px', resize:'none', padding:'10px', outline: 'none'}} placeholder={\"Share what's in your mind!\"} maxLength={140}></textarea>\n        </div>\n    ),[value])\n}\n\nexport default GlitInput\n","\n\ninterface Props{\n    handlePostGlit: ()=> void;\n}\n\n\nconst GlitButton = ({handlePostGlit}: Props) => {\n    return (\n        <div className=\"flex items-center w-full mt-1\">\n\n            <button onClick={handlePostGlit} style={{backgroundColor:\"rgba(75,85,99,1)\", color:\"#fff\", fontWeight:500}} className=\"bg-gray w-full  text-white font-bold rounded border-b-2 border-gray-400 shadow-md py-2 px-6 inline-flex items-center hover:bg-gray-300\">\n        \n        <div className=\"flex justify-center w-full\">\n         <span className=\"mr-2\">Glitttt it</span>\n             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path fill=\"#fff\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"></path>\n        </svg>\n         </div>\n            </button>\n\n        </div>\n    )\n}\n\nexport default GlitButton\n","import _ from 'lodash'\nimport { Tweet } from '../../types'\nimport {formatDistance} from 'date-fns'\n\nconst FeedCard = ({data}:{data: Tweet}) => {\n    \n    const tweetText = _.get(data,'tweetText',\"\");\n    const author = _.get(data,\"postedBy.username\",\"\");\n    const authorImage = _.get(data,\"postedBy.avatar\",\"\");\n    const postedAt = _.get(data,\"createdAt\",\"\");\n    \n    return (\n        <div className=\"max-w-4xl px-10 my-4 py-6 bg-white rounded-lg shadow-md\">\n        <div className=\"flex justify-between items-center\">\n            <span className=\"font-light text-gray-600\">\n            {formatDistance(\n            new Date(postedAt),\n            new Date(),\n            { includeSeconds: true,addSuffix: true }\n            )}</span>\n            <div></div>\n        </div>\n        <div className=\"mt-2\">\n            {tweetText.length<50?<p className=\"text-2xl text-gray-700 font-bold hover:text-gray-600\">{tweetText}</p>:\n                      <p className=\"mt-2 text-gray-600\">{tweetText}</p> }\n        </div>\n        <div className=\"flex justify-between items-center mt-4\">\n           <div></div>\n            <div>\n                <div className=\"flex items-center\">\n                    <img className=\"mx-4 w-10 h-10 object-cover rounded-full hidden sm:block\" src={authorImage} alt=\"avatar\" />\n                    <h1 className=\"text-gray-700 font-bold\">{author}</h1>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default FeedCard\n","import _ from 'lodash'\nimport React from 'react'\n\n\nimport { User } from '../../types'\n\ninterface Props {\n    logout: ()=> void;\n    user:User\n}\n\nconst ProfileChip = ({logout,user}: Props) => {\n    const avatar = _.get(user,'avatar',\"\");\n    return React.useMemo(()=>(\n        <div className=\"w-full\">\n         <div className=\"cursor-pointer hover:shadow-lg flex flex-col items-center justify-end bg-green-300 rounded-lg relative w-full\">\n         <div className=\"h-16 w-16 z-10 shadow-md  bg-white rounded-full relative\" style={{bottom: \"35px\",backgroundImage: `url(${avatar})`, backgroundSize:'contain'}}></div>\n        <div className=\"flex flex-col z-0 absolute justify-end w-full bg-white shadow-lg rounded-lg py-3\" style={{top: \"0px\" ,height: \"90px\"}}>\n        <div className=\"font-bold text-gray-600 text-sm leading-5 text-center\">Hey, @{_.get(user,'username',\"\")}</div>\n         <div onClick={logout} className=\"text-center text-gray-500 px-2\" style={{fontSize: \"11px\", width:'fit-content'}}>Logout</div>\n        </div>\n        </div>     \n        </div>\n    ),[user])\n}\n\nexport default ProfileChip\n","export const UNICORN_SERVICE = process.env.BASE_URL || \"http://localhost:5000\";\n\n","import axios, { AxiosInstance } from 'axios';\n\nimport { UNICORN_SERVICE } from \"../config\"\n\nclass _UnicornService {\n    public readonly _instance: AxiosInstance;\n\n\n    public constructor(baseURL: string) {\n        this._instance = axios.create({\n            baseURL,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            timeout: 10000\n        })\n\n        this._initializeRequestInterceptor();\n        this._initializeResponseInterceptor();\n    }\n    private _initializeResponseInterceptor() {\n        this._instance.interceptors.request.use((config) => {\n            config.headers['x-auth-token'] = localStorage.getItem('x-glitter');\n            return config;\n        })\n    }\n\n    private _initializeRequestInterceptor() {\n        this._instance.interceptors.request.use(\n            this._handleResponse,\n            this._handleError\n        )\n    }\n\n    private _handleResponse = (response: any) => response\n\n    private _handleError = (error: any) => {\n        // Handle error push toast messages\n\n        console.log(\"ERROR FROM UNICORN SERVICE\", error)\n\n        return Promise.reject(error);\n    }\n}\n\n\nexport const UnicornService = new _UnicornService(UNICORN_SERVICE)._instance;","\n//Module imports\nimport { toast } from 'react-toastify';\nimport React from 'react'\n\n\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport useStore from '../../Store/Store';\nimport { User } from '../../types';\n\n\n\n\nconst useFollow = () => {\n\n    const [user, setUser, setGlits] = useStore(state => [state.user, state.setUser, state.setGlits])\n    const followUser = async (id: string) => {\n\n        try {\n\n            const response = await UnicornService.post(`/api/user/follow/${id}`);\n\n            if (response.status === 200) {\n                toast.dark(\"Followed\");\n                setGlits(response.data.data);\n                const newUser: User = { ...user, followers: [id, ...user.followers] }\n                setUser(newUser);\n            }\n\n        } catch (error) {\n\n\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [followUser] as const;\n}\n\n\nexport default useFollow;","\n//Module imports\nimport { toast } from 'react-toastify';\nimport React from 'react'\n\n\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport { User } from '../../types';\n\n\n\nconst useSearchUser = () => {\n\n\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const [data, setData] = React.useState<User[]>([]);\n\n    const handleDataSetting = (e: any) => {\n        setData(e);\n    }\n    const searchUser = async (username: string | null) => {\n        if (username === null) return;\n        try {\n            setLoading(true);\n            const response = await UnicornService.get(`/api/user?filterOn=username&filter=${username}`);\n\n            if (response.status === 200) {\n                setData(response.data.data);\n            }\n            setLoading(false);\n        } catch (error) {\n\n            setLoading(false);\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [data, loading, searchUser, handleDataSetting] as const;\n}\n\n\nexport default useSearchUser;","import _ from 'lodash';\nimport React from 'react'\nimport Loader from 'react-loader-spinner';\nimport useStore from '../../Store/Store';\n\nimport { User } from '../../types';\nimport useFollow from '../hooks/useFollow';\nimport useSearchUser from '../hooks/useUserSearch';\n\ninterface Props {\n    \n}\n\nconst SearchComponent = (props: Props) => {\n\n    const [param, setParam] = React.useState<string | null>(\"\");\n    const [data,loading, searchUser, handleDataSetting] = useSearchUser();\n    const [user] = useStore(state=> [state.user])\n    const [follow] = useFollow();\n\n\n    const updateQuery = () => {\n        searchUser(param);\n    }\n\n    const delayedQuery = React.useCallback(_.debounce(updateQuery, 1000), [param]);\n\n    const onChange = (e:any) => {\n        setParam(e.target.value);\n        if(e.target.value===\"\"){\n            handleDataSetting([]);\n            return;\n        }   \n    };\n    React.useEffect(() => {\n   delayedQuery();\n\n   // Cancel the debounce on useEffect cleanup.\n   return delayedQuery.cancel;\n    }, [param, delayedQuery]);\n\n    const handleFollowRequest = (id: string) => {\n        if(id === \"\") return;\n        follow(id)\n    }       \n\n\n    /**\n     * @description checks whether the user is already being followed\n     * @param id Id of the user\n     */\n    const isBeingFollowed = (id: string)=>{\n\n        if(user && user.followers.find((_id:string) => _id.toString() === id.toString())){\n            return false;\n        }\n        if(user && user._id === id){\n            return false;\n        }\n        return true;\n    }\n\n\n    const renderStrip = (e:User) =>   <div key={_.get(e,'_id',Math.random())} className=\"flex justify-start cursor-pointer text-gray-700 rounded-md px-2 py-2 my-2\">\n                            <span className=\"bg-gray-400 h-2 w-2 m-2 rounded-full\"></span>\n                            <div className=\"flex-grow font-medium px-2\">{_.get(e,'username',\"\")}</div>\n                           { isBeingFollowed(_.get(e,'_id',\"\")) && <div className=\"text-sm font-normal text-gray-500 tracking-wide\" onClick={()=> handleFollowRequest(_.get(e,'_id',\"\"))}>Follow</div>}\n                        </div>\n    return (\n        <>\n        <div className=\"w-full\">\n        <div className=\"flex w-full pt-3\">\n            <div className=\"w-full\">\n                <div className=\"bg-white shadow-md rounded-lg px-3 py-2 mb-4\">\n                    <div className=\"block text-gray-700 text-lg font-semibold py-2 px-2\">\n                        Discover\n                    </div>\n                    <div className=\"flex items-center bg-gray-200 rounded-md\">\n                        <div className=\"pl-2\">\n                            <svg className=\"fill-current text-gray-500 w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 24 24\">\n                                <path className=\"heroicon-ui\"\n                                    d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\n                            </svg>\n                        </div>\n                        <input\n                            value={param? param: \"\"}\n                            onChange={(e)=> onChange(e)}\n                            className=\"w-full rounded-md bg-gray-200 text-gray-700 leading-tight focus:outline-none py-2 px-2\"\n                            id=\"search\" type=\"text\" placeholder=\"Search users\" />\n                    </div>\n                    <div className=\"py-3 text-sm\">\n\n                        {\n                            loading? <div className=\"flex justify-center\"><Loader type={\"Puff\"} color={\"#28292b\"} width={25} /></div>: \n                            data.length>0? data.map((e)=>renderStrip(e)): <p>No results found</p>\n                        }\n                        \n                    </div>\n                    <div className=\"block bg-gray-200 text-sm text-right py-2 px-3 -mx-3 -mb-2 rounded-b-lg\">\n                     \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </>\n    )\n}\n\nexport default SearchComponent\n","\n\nimport SearchComponent from './components/SearchComponent'\n\ninterface Props {\n    \n}\n\nconst index = (props: Props) => {\n    return (\n        <div className=\"h-screen w-full\">\n            <SearchComponent />\n        </div>\n    )\n}\n\nexport default index\n","\n//Module import\nimport { toast } from 'react-toastify';\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport useStore from '../../Store/Store';\n\ntype GlitType = {\n    tweetText: string\n}\n\n\n\nconst usePostGlit = () => {\n\n    const [glits, setGlits] = useStore(state => [state.glits, state.setGlits]);\n\n\n    const postGlit = async (data: GlitType) => {\n\n        const config = {\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        }\n        const body = {\n            tweetText: data.tweetText\n        }\n\n\n        try {\n\n            const response = await UnicornService.post('/api/tweet', JSON.stringify(body), config);\n\n            if (response.status === 200) {\n\n                let newGlits = glits;\n                newGlits = (glits) ? [{ ...response.data.data }, ...glits] : null;\n                setGlits(newGlits)\n                toast.dark(\"Glit posted 🎉\")\n\n            }\n\n\n\n        } catch (error) {\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [postGlit];\n}\n\n\nexport default usePostGlit;","import React from 'react'\n\n\nimport Tabs from './Tabs'\nimport GlitInput from \"./GlitInput\"\nimport GlitButton from './GlitButton';\nimport FeedCard from './FeedCard';\nimport ProfileChip from './ProfileChip';\nimport { User } from '../../types';\nimport Discover from '../../discover'\nimport usePostGlit from '../hooks/usePostGlit';\nimport useStore from '../../Store/Store';\nimport _ from 'lodash';\n\n\n\n\ninterface Props {\n    logout: ()=>void;\n    user: User;    \n}\n\nexport const TABS = {\n    FEED: 'FEED',\n    DISCOVER: 'DISCOVER'\n}\n\nconst FeedHolder = ({logout,user}: Props) => {\n\n\n    //------------------\n    //----Data containers------\n    //------------------\n\n    const [tab,setTab] = React.useState(TABS.FEED);\n    const [glit,setGlit] = React.useState(\"\");\n    const [postGlit] = usePostGlit()\n    const [glits] = useStore(state=> [state.glits])\n    \n\n    //------------------\n    //----Handlers------\n    //------------------\n\n    /**\n     * @description changes the tab value\n     * @param tab tab value\n     */\n    const handleTabChange = (tab:string)=> {\n        setTab(tab);\n    }\n\n    /**\n     * @description glit value handler\n     * @param e input event\n     */\n    const glitInputOnChange = (e:any) => {\n       \n        setGlit(e.target.value);\n    }\n\n    const handlePostGlit = () => {\n\n        postGlit({tweetText: glit})\n        setGlit(\"\"); //Resetting the input component\n    }\n\n    return (\n\n        <div className=\"w-screen bg-gray-100 h-full\">\n            <div className=\"w-5/12 h-full m-auto full-on-mobile\">\n                <div className=\"flex justify-center\">\n                    <p style={{fontSize:'4em'}} className=\"cursor-pointer ...\">\n                        🦄\n                    </p>\n                </div>\n                <Tabs selectedTab={tab} handleTabChange={handleTabChange} />\n                <ProfileChip user={user} logout={logout} />\n                <GlitInput value={glit} changeHandler={glitInputOnChange}/>\n                <GlitButton handlePostGlit={handlePostGlit} />\n               \n                {tab===TABS.FEED? <>\n                    { glits&&glits.length>0 ?\n                    glits?.map((data)=><FeedCard key={_.get(data,\"_id\",Math.random())} data={data} />):\n                     <p className=\" text-center mt-10 text-lg text-gray-400\">No glits to show. Post one! 🍭</p>\n                    }\n                </>\n                : <Discover />}\n            </div>\n        </div>\n    )\n}\n\nexport default FeedHolder\n","\n//Module imports\nimport { toast } from 'react-toastify';\n\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport useStore from '../../Store/Store';\n\n\n\nconst useFetchGlits = () => {\n\n    const [setGlits] = useStore(state => [state.setGlits])\n\n    const getFeed = async () => {\n\n        try {\n\n\n            const response = await UnicornService.get('/api/tweet');\n\n            if (response.status === 200) {\n                setGlits(response.data.data);\n            }\n\n        } catch (error) {\n\n\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [getFeed] as const;\n}\n\n\nexport default useFetchGlits;","import React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport useStore from '../Store/Store';\n\n\n\nimport FeedHolder from './components/FeedHolder';\nimport useFetchGlits from './hooks/useFetchGlits';\n\n\ninterface Props {}\n\nconst Index = (props: Props) => {\n\n    const [isAuth, setLogout, user] = useStore(state=> [state.isAuth, state.setLogout, state.user]);\n    const history = useHistory();\n    const [getFeed] = useFetchGlits();\n\n    React.useEffect(() => {\n        if(!isAuth){\n            history.push('/login')\n        }\n    }, [isAuth]);\n\n    React.useEffect(()=>{\n\n        getFeed();\n\n        \n    \n    },[])\n\n\n\n    /**\n     * @description Removes auth token from local storage and manipulates global store\n     * @return void\n     */\n    const logout = () => {\n        localStorage.removeItem('x-glitter');\n        setLogout();\n    }\n\n    return (\n    <>\n     <FeedHolder \n        logout={logout}\n        user={user}\n      />   \n     </>\n    )\n}\n\nexport default Index;\n","\n//Module imports\nimport React from 'react';\nimport { toast } from 'react-toastify';\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport useStore from '../../Store/Store';\nimport { User } from '../../types';\n\n\nconst useGetUser = () => {\n\n    const [setBusy, setUser, setIsAuth, setLogout] = useStore(state => [state.setBusy, state.setUser, state.setIsAuth, state.setLogout])\n    const [localUser, setLocalUser] = React.useState<User | null>(null)\n\n    const getUser = async () => {\n        try {\n            setBusy(true);\n            const response = await UnicornService.get('/api/auth');\n\n            if (response.status === 200) {\n\n                setUser(response.data);\n                setLocalUser(response.data)\n                setIsAuth(true);\n            } else {\n                setLogout();\n            }\n            setBusy(false);\n        } catch (error) {\n\n            setBusy(false);\n            setLogout();\n            localStorage.removeItem('x-glitter')\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [localUser, getUser] as const;\n}\n\n\nexport default useGetUser;","\n//Module imports\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router-dom'\n\n\n//Relative imports\nimport useStore from '../../Store/Store';\nimport { UnicornService } from '../../services/UnicornService';\nimport useGetUser from './useGetUser';\n\n\n\ntype CredentialsType = {\n    username: string,\n    password: string\n}\n\n\n\nconst useLogin = () => {\n\n    const [setBusy, setIsAuth] = useStore(state => [state.setBusy, state.setIsAuth]);\n    const [_, getUser] = useGetUser();\n    const history = useHistory();\n\n    const initiateLogin = async (credentials: CredentialsType) => {\n        const config = {\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        }\n        try {\n            setBusy(true);\n            const response = await UnicornService.post('/api/auth', credentials, config);\n\n            if (response.status === 200) {\n                localStorage.setItem('x-glitter', response.data.data.token);\n                getUser();\n                setIsAuth(true);\n                history.push('/feed');\n            }\n\n            setBusy(false);\n\n\n        } catch (error) {\n            setBusy(false);\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [initiateLogin];\n}\n\n\nexport default useLogin;","import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport useStore from '../Store/Store'\nimport useLogin from './hooks/useLogin'\n\ninterface LoginData {\n    username: string,\n    password:string   \n}\n\nconst Signin = () => {\n\n    const [isAuth] = useStore(state=> [state.isAuth])\n    const [initiateLogin] = useLogin()\n    const history = useHistory();\n\n    React.useEffect(()=>{\n        if(isAuth) history.push('/feed');\n    },[isAuth])\n\n    const INIT_LOGIN_FORM = {\n        username:\"\",\n        password:\"\"\n    }\n\n    const [data,setData] = React.useState<LoginData>(INIT_LOGIN_FORM)\n    \n\n    const handleChange = (e: any) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        initiateLogin(data);\n    }\n\n    return (\n        <div>\n           <div className=\"w-screen h-screen flex justify-center items-center bg-gray-100\">\n\t\t<form onSubmit={handleSubmit} className=\"p-10 bg-white rounded flex justify-center items-center flex-col shadow-md\">\n            <p style={{fontSize: '5em'}}>🦄</p>\n\t\t\t<p className=\"mb-5 text-3xl text-gray-600\">Login</p>\n\t\t\t<input value={data.username} onChange={handleChange} type=\"text\" name=\"username\" className=\"mb-5 p-3 w-80 focus:border-purple-700 rounded border-2 outline-none\" autoComplete=\"off\" placeholder=\"Username\" required />\n\t\t\t<input value={data.password} onChange={handleChange} type=\"password\" name=\"password\" className=\"mb-5 p-3 w-80 focus:border-purple-700 rounded border-2 outline-none\" autoComplete=\"off\" placeholder=\"Password\" required />\n\t\t\t<button className=\"bg-gray-600 hover:bg-gray-900 text-white font-bold p-2 rounded w-80\" id=\"login\" type=\"submit\"><span>Login</span></button>\n             <Link to=\"/signup\" className=\"mt-2\"> Don't have an account? Create one.</Link>\n\t\t</form>\n\n\t    </div>\n        </div>\n    )\n}\n\n\n\n\nexport default Signin;","\n//Module import\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router-dom'\n\n//Relative imports\nimport { UnicornService } from '../../services/UnicornService';\nimport useGetUser from './useGetUser';\nimport useStore from '../../Store/Store';\n\ntype CredentialsType = {\n    email: string,\n    username: string,\n    password: string\n}\n\n\n\nconst useCreateUser = () => {\n\n    const [setBusy, setIsAuth] = useStore(state => [state.setBusy, state.setIsAuth]);\n    const [_, getUser] = useGetUser();\n    const history = useHistory();\n\n    const initiateSignUp = async (credentials: CredentialsType) => {\n        const config = {\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        }\n        try {\n            setBusy(true);\n            const response = await UnicornService.post('/api/user', credentials, config);\n\n            if (response.status === 200) {\n                localStorage.setItem('x-glitter', response.data.data.token);\n                getUser();\n                setIsAuth(true);\n                history.push('/feed');\n            }\n\n            setBusy(false);\n\n\n        } catch (error) {\n            setBusy(false);\n            error.response?.data?.errors?.map((e: any) => toast.error(e.msg));\n        }\n    }\n\n\n\n    return [initiateSignUp];\n}\n\n\nexport default useCreateUser;","import React from 'react';\nimport {Link, useHistory} from 'react-router-dom'\n\n\nimport useStore from '../Store/Store';\nimport useCreateUser from './hooks/useCreateUser';\n\ninterface Props {}\n\ninterface SignUpData {\n    username: string,\n    password:string,\n    email: string\n}\n\n\nconst Signup = (props: Props) => {\n    const [initiateSignUp] = useCreateUser();\n    const [isAuth] = useStore(state=> [state.isAuth])\n    const history = useHistory();\n\n    React.useEffect(()=>{\n        if(isAuth) history.push('/feed');\n    },[isAuth])\n\n    const INIT_SIGNUP_FORM = {\n        username:\"\",\n        password:\"\",\n        email: \"\"\n    }\n\n    const [data,setData] = React.useState<SignUpData>(INIT_SIGNUP_FORM)\n    \n\n    const handleChange = (e: any) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        initiateSignUp(data);\n    }\n\n\n    return (\n        <div>\n           <div>\n           <div className=\"w-screen h-screen flex justify-center items-center bg-gray-100\">\n\t\t    <form onSubmit={handleSubmit} className=\"p-10 bg-white rounded flex justify-center items-center flex-col shadow-md\">\n            <p style={{fontSize: '5em'}}>🦄</p>\n\t\t\t<p className=\"mb-5 text-3xl text-gray-600\">Become a glitter</p>\n            <input value={data.username} onChange={handleChange} type=\"text\" name=\"username\" className=\"mb-5 p-3 w-80 focus:border-purple-700 rounded border-2 outline-none\" autoComplete=\"off\" placeholder=\"Username\" required />\n\t\t\t<input value={data.email} onChange={handleChange} type=\"email\" name=\"email\" className=\"mb-5 p-3 w-80 focus:border-purple-700 rounded border-2 outline-none\" autoComplete=\"off\" placeholder=\"Email\" required />\n\t\t\t<input value={data.password} onChange={handleChange}  type=\"password\" name=\"password\" className=\"mb-5 p-3 w-80 focus:border-purple-700 rounded border-2 outline-none\" autoComplete=\"off\" placeholder=\"Password\" required />\n\t\t\t<button className=\"bg-gray-600 hover:bg-gray-900 text-white font-bold p-2 rounded w-80\" id=\"login\" type=\"submit\"><span>Create</span></button>\n             <Link to=\"/login\" className=\"mt-2\"> Already got an account? Login.</Link>\n\t\t</form>\n\n\t    </div>\n        </div>\n        </div>\n    )\n}\n\n\n\n\nexport default Signup;","import React from 'react'\nimport {useHistory} from 'react-router-dom'\nimport useStore from '../Store/Store';\ninterface Props {\n    \n}\n\n const Home = (props: Props) => {\n     const history = useHistory();\n     const [isAuth] = useStore(state=> [state.isAuth])\n\n     const handleOnClick = () => {\n         history.push('/login');\n     }\n\n     React.useEffect(()=> {\n    \n        if(isAuth) {\n        history.push('/feed')\n        }\n    },[isAuth])\n\n    return (\n        <div className=\"w-screen h-screen flex justify-center items-center bg-gray-100\">\n                <div className=\"text-center\">\n                    <p style={{fontSize:'10em', marginLeft: \"-20px\"}} className=\"cursor-pointer ...\">\n                    🦄\n                    </p>\n              <div style={{marginTop: '-50px'}}>\n                        <h1 className=\"text-6xl font-black text-gray-500\" >Glitter</h1>\n                    <p className=\"text-gray-400\">Trump friendly micro-blogging platform</p>\n              </div>\n            <button onClick={handleOnClick} className=\"bg-gray-600 mt-10 hover:bg-gray-900 text-white font-bold p-2 rounded w-55 transition 0.5s\" id=\"login\" type=\"submit\"><span>Get started!</span></button>\n                </div>\n        </div>\n    )\n}\n\nexport default Home;\n","\nimport Loader from 'react-loader-spinner'\n\nconst AppLoader = () => {\n    return (\n       <div className=\"w-screen h-screen flex justify-center items-center bg-gray-100\">\n        <Loader\n            type=\"Puff\"\n            color=\"rgba(75,85,99)\"\n            height={100}\n            width={100}\n        />\n        </div>\n    )\n}\n\nexport default AppLoader\n","//Module imports\nimport React from 'react';\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\n import { ToastContainer} from 'react-toastify';\n\n//Relative imports\nimport Feed from './feed'\nimport Signin from './auth/Signin';\nimport Signup from './auth/Signup';\nimport Home from './components/Home';\nimport AppLoader from './components/Loader';\nimport useGetUser from './auth/hooks/useGetUser'\nimport socketIOClient from \"socket.io-client\";\nimport _ from 'lodash'\n\n//Style\nimport 'react-toastify/dist/ReactToastify.css';\nimport useStore from './Store/Store';\nimport useFetchGlits from './feed/hooks/useFetchGlits';\nimport { UNICORN_SERVICE } from './config';\n\n\n\n\n\nconst App: React.FC = () => {\n  const [_,getUser] = useGetUser();\n  const [isBusy, isAuth, user, glits, setGlits] = useStore(state=> [state.isBusy, state.isAuth, state.user,state.glits, state.setGlits])\n\n\n\n\n  React.useEffect(() => {\n\n\n        getUser();\n    \n\n  }, []);\n\n\n\n  React.useEffect(() => {\n    const socket = socketIOClient(UNICORN_SERVICE);\n    socket.on(\"GLITTED\", (data)=>{\n          console.log(data);\n        console.log(user);\n      if(user && isAuth){\n    \n        const tweetUserId = data.postedBy._id || \"\";\n\n        if(user.followers.find((id:string)=> id.toString() === tweetUserId.toString())){\n    \n          const newGlits: any = (glits!==null)?[data,...glits]:[data];\n          setGlits(newGlits);\n        }\n\n      }\n    })\n\n  }, []);\n\n\n  if(isBusy) return <AppLoader />\n  return (\n    <>\n    <ToastContainer newestOnTop autoClose={2000} />\n     <BrowserRouter>\n      <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/feed\" component={Feed} />\n      <Route exact path=\"/login\" component={Signin} />\n      <Route exact path=\"/signup\" component={Signup} />\n      </Switch>\n     </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}